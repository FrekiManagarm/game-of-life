{"ast":null,"code":"var _jsxFileName = \"/Users/mathieuchambaud/Documents/Perso-Projects/game-of-life/game-of-life-react/src/GameOfLife.js\";\nimport React from \"react\";\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TAILLE_CELL = 20;\nconst LARGEUR = 800;\nconst HAUTEUR = 600;\n\nclass Cellule extends React.Component {\n  render() {\n    const {\n      x,\n      y\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cellule\",\n      style: {\n        left: `${TAILLE_CELL * x + 1}px`,\n        right: `${TAILLE_CELL * y + 1}px`,\n        width: `${TAILLE_CELL - 1}px`,\n        height: `${TAILLE_CELL - 1}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass GameOfLife extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cells: [],\n      isRunning: false,\n      interval: 100\n    };\n\n    this.tableauVide = () => {\n      let tableau = [];\n\n      for (let y = 0; y < this.rows; y++) {\n        tableau[y] = [];\n\n        for (let x = 0; x < this.cols; x++) {\n          tableau[x][y] = false;\n        }\n      }\n\n      return tableau;\n    };\n\n    this.handleClick = event => {\n      const elemOffset = this.getElementOffset();\n      const offsetX = event.clientX - elemOffset.x;\n      const offsetY = event.clientY - elemOffset.y;\n      const x = Math.floor(offsetX / TAILLE_CELL);\n      const y = Math.floor(offsetY / TAILLE_CELL);\n\n      if (x >= 0 && x <= this.cols && y >= 0 && y <= this.rows) {\n        this.board[y][x] = !this.board[y][x];\n      }\n\n      this.setState({\n        cells: this.cestLaVie()\n      });\n    };\n\n    this.runGame = () => {\n      this.setState({\n        isRunning: true\n      });\n      this.runIteration();\n    };\n\n    this.stopGame = () => {\n      this.setState({\n        isRunning: false\n      });\n\n      if (this.timeoutHandler) {\n        window.clearTimeout(this.timeoutHandler);\n        this.timeoutHandler = null;\n      }\n    };\n\n    this.handleIntervalChange = event => {\n      this.setState({\n        interval: event.target.value\n      });\n    };\n\n    this.handleClear = () => {\n      this.board = this.tableauVide();\n      this.setState({\n        cells: this.cestLaVie()\n      });\n    };\n\n    this.dispoAleatoire = () => {\n      for (let y = 0; y < this.rows; y++) {\n        for (let x = 0; x < this.cols; x++) {\n          this.board[y][x] = Math.random() >= 0.5;\n        }\n      }\n\n      this.setState({\n        cells: this.cestLaVie()\n      });\n    };\n\n    this.rows = HAUTEUR / TAILLE_CELL;\n    this.cols = LARGEUR / TAILLE_CELL;\n    this.board = this.tableauVide();\n  }\n\n  getElementOffset() {\n    const rect = this.boardRef.getBoundingClientRect();\n    const doc = document.documentElement;\n    return {\n      x: rect.left + window.pageXOffset - doc.clientLeft,\n      y: rect.top + window.pageYOffset - doc.clientTop\n    };\n  }\n\n  cestLaVie() {\n    let cells = [];\n\n    for (let y = 0; y < this.rows; y++) {\n      for (let x = 0; x < this.cols; x++) {\n        if (this.board[y][x]) {\n          cells.push({\n            x,\n            y\n          });\n        }\n      }\n    }\n\n    return cells;\n  } // cette fonction sert à incrémenter les cellules dans le tableau dans l'état du composant\n\n\n  runIteration() {\n    let nouveauTableau = this.tableauVide();\n\n    for (let y = 0; y < this.rows; y++) {\n      for (let x = 0; x < this.cols; x++) {\n        let voisins = this.nombreVoisins(this.board, x, y);\n\n        if (this.board[y][x]) {\n          if (voisins === 2 || voisins === 3) {\n            nouveauTableau[y][x] = true;\n          } else {\n            nouveauTableau[y][x] = false;\n          }\n        } else {\n          if (!this.board[y][x] && voisins === 3) {\n            nouveauTableau[y][x] = true;\n          }\n        }\n      }\n    }\n\n    this.board = nouveauTableau;\n    this.setState({\n      cells: this.cestLaVie()\n    });\n    this.timeoutHandler = window.setTimeout(() => {\n      this.runIteration();\n    }, this.state.interval);\n  }\n\n  nombreVoisins(board, x, y) {\n    let voisins = 0;\n    const dirs = [[-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1]];\n\n    for (let i = 0; i < dirs.length; i++) {\n      const dir = dirs[i];\n      let y1 = y + dir[0];\n      let x1 = x + dir[1];\n\n      if (x1 >= 0 && x1 < this.cols && y1 >= 0 && y1 < this.rows && board[y1][x1]) {\n        voisins++;\n      }\n    }\n\n    return voisins;\n  }\n\n  render() {\n    const {\n      cells,\n      interval,\n      isRunning\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Battlefield\",\n        style: {\n          width: LARGEUR,\n          height: HAUTEUR,\n          backgroundSize: `${TAILLE_CELL}px ${TAILLE_CELL}px`\n        },\n        onClick: this.handleClick,\n        ref: n => {\n          this.boardRef = n;\n        },\n        children: cells.map(cell => /*#__PURE__*/_jsxDEV(Cellule, {\n          x: cell.x,\n          y: cell.y\n        }, `${cell.x},${cell.y}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [\"Update every \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.interval,\n          onChange: this.handleIntervalChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 34\n        }, this), \" msec\", isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.stopGame,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.runGame,\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.dispoAleatoire,\n          children: \"Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: this.handleClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameOfLife;","map":{"version":3,"names":["React","TAILLE_CELL","LARGEUR","HAUTEUR","Cellule","Component","render","x","y","props","left","right","width","height","GameOfLife","constructor","state","cells","isRunning","interval","tableauVide","tableau","rows","cols","handleClick","event","elemOffset","getElementOffset","offsetX","clientX","offsetY","clientY","Math","floor","board","setState","cestLaVie","runGame","runIteration","stopGame","timeoutHandler","window","clearTimeout","handleIntervalChange","target","value","handleClear","dispoAleatoire","random","rect","boardRef","getBoundingClientRect","doc","document","documentElement","pageXOffset","clientLeft","top","pageYOffset","clientTop","push","nouveauTableau","voisins","nombreVoisins","setTimeout","dirs","i","length","dir","y1","x1","backgroundSize","n","map","cell"],"sources":["/Users/mathieuchambaud/Documents/Perso-Projects/game-of-life/game-of-life-react/src/GameOfLife.js"],"sourcesContent":["import React from \"react\";\nimport './Game.css'\n\nconst TAILLE_CELL = 20;\nconst LARGEUR = 800;\nconst HAUTEUR = 600;\n\nclass Cellule extends React.Component {\n\n    render() {\n        const { x, y } = this.props\n        return (\n            <div \n                className=\"cellule\"\n                style={{\n                    left: `${TAILLE_CELL * x + 1}px`,\n                    right: `${TAILLE_CELL * y + 1}px`,\n                    width: `${TAILLE_CELL - 1}px`,\n                    height: `${TAILLE_CELL - 1}px`,\n                }}\n            />\n        )\n    }\n}\n\nclass GameOfLife extends React.Component {\n\n    constructor() {\n        super();\n        this.rows = HAUTEUR / TAILLE_CELL;\n        this.cols = LARGEUR / TAILLE_CELL;\n\n        this.board = this.tableauVide();\n    }\n\n    state = {\n        cells: [],\n        isRunning: false,\n        interval: 100,\n    }\n\n    tableauVide = () => {\n        let tableau = [];\n        for (let y = 0; y < this.rows; y++) {\n            tableau[y] = [];\n            for (let x = 0; x < this.cols; x++) {\n                tableau[x][y] = false;\n            }\n        }\n\n        return tableau;\n    }\n\n    getElementOffset() {\n        const rect = this.boardRef.getBoundingClientRect();\n        const doc = document.documentElement;\n\n        return {\n            x: (rect.left + window.pageXOffset) - doc.clientLeft,\n            y: (rect.top + window.pageYOffset) - doc.clientTop,\n        };\n    }\n\n    cestLaVie() {\n        let cells = [];\n        for (let y = 0; y < this.rows; y++) {\n            for (let x = 0; x < this.cols; x++) {\n                if (this.board[y][x]) {\n                    cells.push({ x, y });\n                }\n            }\n        }\n\n        return cells;\n    }\n\n\n    // cette fonction sert à incrémenter les cellules dans le tableau dans l'état du composant\n\n    handleClick = (event) => {\n\n        const elemOffset = this.getElementOffset();\n        const offsetX = event.clientX - elemOffset.x;\n        const offsetY = event.clientY - elemOffset.y;\n        \n        const x = Math.floor(offsetX / TAILLE_CELL);\n        const y = Math.floor(offsetY / TAILLE_CELL);\n\n        if (x >= 0 && x <= this.cols && y >= 0 && y <= this.rows) {\n            this.board[y][x] = !this.board[y][x];\n        }\n\n        this.setState({ cells: this.cestLaVie() });\n    }\n\n    runGame = () => {\n        this.setState({ isRunning: true });\n        this.runIteration();\n    }\n\n    stopGame = () => {\n        this.setState({ isRunning: false });\n        if (this.timeoutHandler) {\n            window.clearTimeout(this.timeoutHandler);\n            this.timeoutHandler = null;\n        }\n    }\n\n    runIteration() {\n        let nouveauTableau = this.tableauVide();\n\n        for (let y = 0; y < this.rows; y++) {\n            for (let x = 0; x < this.cols; x++) {\n                let voisins = this.nombreVoisins(this.board, x, y);\n                if (this.board[y][x]) {\n                    if (voisins === 2 || voisins === 3) {\n                        nouveauTableau[y][x] = true;\n                    } else {\n                        nouveauTableau[y][x] = false;\n                    }\n                } else {\n                    if (!this.board[y][x] && voisins === 3) {\n                        nouveauTableau[y][x] = true;\n                    }\n                }\n            }\n        }\n\n        this.board = nouveauTableau;\n        this.setState({ cells: this.cestLaVie() });\n\n        this.timeoutHandler = window.setTimeout(() => {\n            this.runIteration();\n        }, this.state.interval);\n    }\n\n    \n    \n    nombreVoisins(board, x, y) {\n        let voisins = 0;\n        const dirs = [[-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1]];\n        for (let i = 0; i < dirs.length; i++) {\n            const dir = dirs[i];\n            let y1 = y + dir[0];\n            let x1 = x + dir[1];\n\n            if (x1 >= 0 && x1 < this.cols && y1 >= 0 && y1 < this.rows && board[y1][x1]) {\n                voisins++;\n            }\n        }\n\n        return voisins;\n    }\n\n    handleIntervalChange = (event) => {\n        this.setState({ interval: event.target.value });\n    }\n\n    handleClear = () => {\n        this.board = this.tableauVide();\n        this.setState({ cells: this.cestLaVie() });\n    }\n    \n\n    dispoAleatoire = () => {\n        for (let y = 0; y < this.rows; y++) {\n            for (let x = 0; x < this.cols; x++) {\n                this.board[y][x] = (Math.random() >= 0.5);\n            }\n        }\n\n        this.setState({ cells: this.cestLaVie() });\n    }\n\n    render() {\n        const { cells, interval, isRunning } = this.state;\n        return (\n            <div>\n                <div className=\"Battlefield\"\n                    style={{ width: LARGEUR, height: HAUTEUR, backgroundSize: `${TAILLE_CELL}px ${TAILLE_CELL}px`}}\n                    onClick={this.handleClick}\n                    ref={(n) => { this.boardRef = n; }}>\n\n                    {cells.map(cell => (\n                        <Cellule x={cell.x} y={cell.y} key={`${cell.x},${cell.y}`}/>\n                    ))}\n                </div>\n\n                <div className=\"controls\">\n                    Update every <input value={this.state.interval} onChange={this.handleIntervalChange} /> msec\n                    {isRunning ?\n                        <button className=\"button\" onClick={this.stopGame}>Stop</button> :\n                        <button className=\"button\" onClick={this.runGame}>Run</button>\n                    }\n                    <button className=\"button\" onClick={this.dispoAleatoire}>Random</button>\n                    <button className=\"button\" onClick={this.handleClear}>Clear</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default GameOfLife;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,OAAO,GAAG,GAAhB;AACA,MAAMC,OAAO,GAAG,GAAhB;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;EAElCC,MAAM,GAAG;IACL,MAAM;MAAEC,CAAF;MAAKC;IAAL,IAAW,KAAKC,KAAtB;IACA,oBACI;MACI,SAAS,EAAC,SADd;MAEI,KAAK,EAAE;QACHC,IAAI,EAAG,GAAET,WAAW,GAAGM,CAAd,GAAkB,CAAE,IAD1B;QAEHI,KAAK,EAAG,GAAEV,WAAW,GAAGO,CAAd,GAAkB,CAAE,IAF3B;QAGHI,KAAK,EAAG,GAAEX,WAAW,GAAG,CAAE,IAHvB;QAIHY,MAAM,EAAG,GAAEZ,WAAW,GAAG,CAAE;MAJxB;IAFX;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AAfiC;;AAkBtC,MAAMa,UAAN,SAAyBd,KAAK,CAACK,SAA/B,CAAyC;EAErCU,WAAW,GAAG;IACV;IADU,KAQdC,KARc,GAQN;MACJC,KAAK,EAAE,EADH;MAEJC,SAAS,EAAE,KAFP;MAGJC,QAAQ,EAAE;IAHN,CARM;;IAAA,KAcdC,WAdc,GAcA,MAAM;MAChB,IAAIC,OAAO,GAAG,EAAd;;MACA,KAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKc,IAAzB,EAA+Bd,CAAC,EAAhC,EAAoC;QAChCa,OAAO,CAACb,CAAD,CAAP,GAAa,EAAb;;QACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgB,IAAzB,EAA+BhB,CAAC,EAAhC,EAAoC;UAChCc,OAAO,CAACd,CAAD,CAAP,CAAWC,CAAX,IAAgB,KAAhB;QACH;MACJ;;MAED,OAAOa,OAAP;IACH,CAxBa;;IAAA,KAoDdG,WApDc,GAoDCC,KAAD,IAAW;MAErB,MAAMC,UAAU,GAAG,KAAKC,gBAAL,EAAnB;MACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,OAAN,GAAgBH,UAAU,CAACnB,CAA3C;MACA,MAAMuB,OAAO,GAAGL,KAAK,CAACM,OAAN,GAAgBL,UAAU,CAAClB,CAA3C;MAEA,MAAMD,CAAC,GAAGyB,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAG3B,WAArB,CAAV;MACA,MAAMO,CAAC,GAAGwB,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG7B,WAArB,CAAV;;MAEA,IAAIM,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,KAAKgB,IAApB,IAA4Bf,CAAC,IAAI,CAAjC,IAAsCA,CAAC,IAAI,KAAKc,IAApD,EAA0D;QACtD,KAAKY,KAAL,CAAW1B,CAAX,EAAcD,CAAd,IAAmB,CAAC,KAAK2B,KAAL,CAAW1B,CAAX,EAAcD,CAAd,CAApB;MACH;;MAED,KAAK4B,QAAL,CAAc;QAAElB,KAAK,EAAE,KAAKmB,SAAL;MAAT,CAAd;IACH,CAlEa;;IAAA,KAoEdC,OApEc,GAoEJ,MAAM;MACZ,KAAKF,QAAL,CAAc;QAAEjB,SAAS,EAAE;MAAb,CAAd;MACA,KAAKoB,YAAL;IACH,CAvEa;;IAAA,KAyEdC,QAzEc,GAyEH,MAAM;MACb,KAAKJ,QAAL,CAAc;QAAEjB,SAAS,EAAE;MAAb,CAAd;;MACA,IAAI,KAAKsB,cAAT,EAAyB;QACrBC,MAAM,CAACC,YAAP,CAAoB,KAAKF,cAAzB;QACA,KAAKA,cAAL,GAAsB,IAAtB;MACH;IACJ,CA/Ea;;IAAA,KA+HdG,oBA/Hc,GA+HUlB,KAAD,IAAW;MAC9B,KAAKU,QAAL,CAAc;QAAEhB,QAAQ,EAAEM,KAAK,CAACmB,MAAN,CAAaC;MAAzB,CAAd;IACH,CAjIa;;IAAA,KAmIdC,WAnIc,GAmIA,MAAM;MAChB,KAAKZ,KAAL,GAAa,KAAKd,WAAL,EAAb;MACA,KAAKe,QAAL,CAAc;QAAElB,KAAK,EAAE,KAAKmB,SAAL;MAAT,CAAd;IACH,CAtIa;;IAAA,KAyIdW,cAzIc,GAyIG,MAAM;MACnB,KAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKc,IAAzB,EAA+Bd,CAAC,EAAhC,EAAoC;QAChC,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgB,IAAzB,EAA+BhB,CAAC,EAAhC,EAAoC;UAChC,KAAK2B,KAAL,CAAW1B,CAAX,EAAcD,CAAd,IAAoByB,IAAI,CAACgB,MAAL,MAAiB,GAArC;QACH;MACJ;;MAED,KAAKb,QAAL,CAAc;QAAElB,KAAK,EAAE,KAAKmB,SAAL;MAAT,CAAd;IACH,CAjJa;;IAEV,KAAKd,IAAL,GAAYnB,OAAO,GAAGF,WAAtB;IACA,KAAKsB,IAAL,GAAYrB,OAAO,GAAGD,WAAtB;IAEA,KAAKiC,KAAL,GAAa,KAAKd,WAAL,EAAb;EACH;;EAoBDO,gBAAgB,GAAG;IACf,MAAMsB,IAAI,GAAG,KAAKC,QAAL,CAAcC,qBAAd,EAAb;IACA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,eAArB;IAEA,OAAO;MACH/C,CAAC,EAAG0C,IAAI,CAACvC,IAAL,GAAY+B,MAAM,CAACc,WAApB,GAAmCH,GAAG,CAACI,UADvC;MAEHhD,CAAC,EAAGyC,IAAI,CAACQ,GAAL,GAAWhB,MAAM,CAACiB,WAAnB,GAAkCN,GAAG,CAACO;IAFtC,CAAP;EAIH;;EAEDvB,SAAS,GAAG;IACR,IAAInB,KAAK,GAAG,EAAZ;;IACA,KAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKc,IAAzB,EAA+Bd,CAAC,EAAhC,EAAoC;MAChC,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgB,IAAzB,EAA+BhB,CAAC,EAAhC,EAAoC;QAChC,IAAI,KAAK2B,KAAL,CAAW1B,CAAX,EAAcD,CAAd,CAAJ,EAAsB;UAClBU,KAAK,CAAC2C,IAAN,CAAW;YAAErD,CAAF;YAAKC;UAAL,CAAX;QACH;MACJ;IACJ;;IAED,OAAOS,KAAP;EACH,CAjDoC,CAoDrC;;;EA+BAqB,YAAY,GAAG;IACX,IAAIuB,cAAc,GAAG,KAAKzC,WAAL,EAArB;;IAEA,KAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKc,IAAzB,EAA+Bd,CAAC,EAAhC,EAAoC;MAChC,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKgB,IAAzB,EAA+BhB,CAAC,EAAhC,EAAoC;QAChC,IAAIuD,OAAO,GAAG,KAAKC,aAAL,CAAmB,KAAK7B,KAAxB,EAA+B3B,CAA/B,EAAkCC,CAAlC,CAAd;;QACA,IAAI,KAAK0B,KAAL,CAAW1B,CAAX,EAAcD,CAAd,CAAJ,EAAsB;UAClB,IAAIuD,OAAO,KAAK,CAAZ,IAAiBA,OAAO,KAAK,CAAjC,EAAoC;YAChCD,cAAc,CAACrD,CAAD,CAAd,CAAkBD,CAAlB,IAAuB,IAAvB;UACH,CAFD,MAEO;YACHsD,cAAc,CAACrD,CAAD,CAAd,CAAkBD,CAAlB,IAAuB,KAAvB;UACH;QACJ,CAND,MAMO;UACH,IAAI,CAAC,KAAK2B,KAAL,CAAW1B,CAAX,EAAcD,CAAd,CAAD,IAAqBuD,OAAO,KAAK,CAArC,EAAwC;YACpCD,cAAc,CAACrD,CAAD,CAAd,CAAkBD,CAAlB,IAAuB,IAAvB;UACH;QACJ;MACJ;IACJ;;IAED,KAAK2B,KAAL,GAAa2B,cAAb;IACA,KAAK1B,QAAL,CAAc;MAAElB,KAAK,EAAE,KAAKmB,SAAL;IAAT,CAAd;IAEA,KAAKI,cAAL,GAAsBC,MAAM,CAACuB,UAAP,CAAkB,MAAM;MAC1C,KAAK1B,YAAL;IACH,CAFqB,EAEnB,KAAKtB,KAAL,CAAWG,QAFQ,CAAtB;EAGH;;EAID4C,aAAa,CAAC7B,KAAD,EAAQ3B,CAAR,EAAWC,CAAX,EAAc;IACvB,IAAIsD,OAAO,GAAG,CAAd;IACA,MAAMG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAD,EAAW,CAAC,CAAC,CAAF,EAAK,CAAL,CAAX,EAAoB,CAAC,CAAC,CAAF,EAAK,CAAL,CAApB,EAA6B,CAAC,CAAD,EAAI,CAAJ,CAA7B,EAAqC,CAAC,CAAD,EAAI,CAAJ,CAArC,EAA6C,CAAC,CAAD,EAAI,CAAJ,CAA7C,EAAqD,CAAC,CAAD,EAAI,CAAC,CAAL,CAArD,EAA8D,CAAC,CAAD,EAAI,CAAC,CAAL,CAA9D,CAAb;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;MAClC,MAAME,GAAG,GAAGH,IAAI,CAACC,CAAD,CAAhB;MACA,IAAIG,EAAE,GAAG7D,CAAC,GAAG4D,GAAG,CAAC,CAAD,CAAhB;MACA,IAAIE,EAAE,GAAG/D,CAAC,GAAG6D,GAAG,CAAC,CAAD,CAAhB;;MAEA,IAAIE,EAAE,IAAI,CAAN,IAAWA,EAAE,GAAG,KAAK/C,IAArB,IAA6B8C,EAAE,IAAI,CAAnC,IAAwCA,EAAE,GAAG,KAAK/C,IAAlD,IAA0DY,KAAK,CAACmC,EAAD,CAAL,CAAUC,EAAV,CAA9D,EAA6E;QACzER,OAAO;MACV;IACJ;;IAED,OAAOA,OAAP;EACH;;EAsBDxD,MAAM,GAAG;IACL,MAAM;MAAEW,KAAF;MAASE,QAAT;MAAmBD;IAAnB,IAAiC,KAAKF,KAA5C;IACA,oBACI;MAAA,wBACI;QAAK,SAAS,EAAC,aAAf;QACI,KAAK,EAAE;UAAEJ,KAAK,EAAEV,OAAT;UAAkBW,MAAM,EAAEV,OAA1B;UAAmCoE,cAAc,EAAG,GAAEtE,WAAY,MAAKA,WAAY;QAAnF,CADX;QAEI,OAAO,EAAE,KAAKuB,WAFlB;QAGI,GAAG,EAAGgD,CAAD,IAAO;UAAE,KAAKtB,QAAL,GAAgBsB,CAAhB;QAAoB,CAHtC;QAAA,UAKKvD,KAAK,CAACwD,GAAN,CAAUC,IAAI,iBACX,QAAC,OAAD;UAAS,CAAC,EAAEA,IAAI,CAACnE,CAAjB;UAAoB,CAAC,EAAEmE,IAAI,CAAClE;QAA5B,GAAqC,GAAEkE,IAAI,CAACnE,CAAE,IAAGmE,IAAI,CAAClE,CAAE,EAAxD;UAAA;UAAA;UAAA;QAAA,QADH;MALL;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAK,SAAS,EAAC,UAAf;QAAA,yCACiB;UAAO,KAAK,EAAE,KAAKQ,KAAL,CAAWG,QAAzB;UAAmC,QAAQ,EAAE,KAAKwB;QAAlD;UAAA;UAAA;UAAA;QAAA,QADjB,WAEKzB,SAAS,gBACN;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAE,KAAKqB,QAAzC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADM,gBAEN;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAE,KAAKF,OAAzC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJR,eAMI;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAE,KAAKU,cAAzC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ,eAOI;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAE,KAAKD,WAAzC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAuBH;;AA9KoC;;AAkLzC,eAAehC,UAAf"},"metadata":{},"sourceType":"module"}